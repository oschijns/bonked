[package]
name = "bonked3d"
description = "Simple 3D collision engine"
authors.workspace = true
repository.workspace = true
version.workspace = true
edition.workspace = true
#license.workspace = true

# Compile Features
[features]
required-features = ["3d"]
default = ["required-features", "parry-f32", "mask-u32", "std"]
3d = []
2d = []
mask-u32 = []
mask-u64 = []

# enable support for the standard library
std = ["bvh-arena/std", "parry3d?/std", "parry3d-f64?/std"]

# enable support for alloc
alloc = ["parry3d?/alloc", "parry3d-f64?/alloc"]

# enable support for Single Instruction Multiple Data
simd = ["parry3d?/simd-stable", "parry3d-f64?/simd-stable"]

# We unfortunately can't reuse the f32 and f64 features for this,
# because Parry uses separate crates for f32 and f64.
parry-f32 = ["dep:parry3d"]
parry-f64 = ["dep:parry3d-f64"]


# Ignore "2d" feature
[lints.rust]
#unexpected_cfgs = { level = "warn", check-cfg = ['cfg(feature = "2d")'] }


# Library configuration
[lib]
name = "bonked3d"
path = "../../src/lib.rs"


# Dependencies
[dependencies]
#hecs = { version = "0.10", default-features = false }
bvh-arena = { version = "1.1", default-features = false }
parry3d = { git = "https://github.com/Jondolf/barry.git", branch = "no-std", features = [
    "dim3",
    "f32",
], default-features = false, optional = true }
parry3d-f64 = { git = "https://github.com/Jondolf/barry.git", branch = "no-std", features = [
    "dim3",
    "f64",
], default-features = false, optional = true }
